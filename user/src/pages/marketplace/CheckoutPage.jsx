import React from 'react';
import { Button } from '../../components/ui/button';
import { Card, CardContent } from '../../components/ui/card';
import { useState } from 'react';
import OrderSuccessModal from '../../components/common/OrderSuccessModal';

export default function CheckoutPage() {
    const [useCoin, setUseCoin] = useState(true);
    const [selectedShipping, setSelectedShipping] = useState('ghn');
    const [selectedPayment, setSelectedPayment] = useState('cod');
    const [showSuccess, setShowSuccess] = useState(false);

    const cart = [
        {
        name: '√Åo Hoodie Local Brand',
        image: 'https://source.unsplash.com/300x200/?hoodie',
        quantity: 2,
        price: 199000,
        },
            {
            name: 'Gi√†y sneaker tr·∫Øng',
            image: 'https://source.unsplash.com/300x200/?sneaker',
            quantity: 1,
            price: 459000,
            },
    ];

    const subtotal = cart.reduce((sum, item) => sum + item.price * item.quantity, 0);
    const shippingFee = 30000;
    const discount = 50000;
    const coinDiscount = useCoin ? 20000 : 0;
    const total = subtotal + shippingFee - discount - coinDiscount;

    return (
        <div className="min-h-screen p-4 space-y-6 bg-gray-100">
        <h1 className="text-2xl font-semibold text-gray-800 mb-4">üßæ Thanh To√°n</h1>

        {/* S·∫£n ph·∫©m */}
        <Card>
            <CardContent className="p-4 space-y-4">
            <h2 className="text-lg font-semibold mb-2">üõçÔ∏è S·∫£n ph·∫©m</h2>
            {cart.map((item, i) => (
                <div key={i} className="flex gap-4 items-center border-b pb-3">
                <img src={item.image} alt={item.name} className="w-24 h-20 object-cover rounded" />
                <div className="flex-1">
                    <p className="font-medium">{item.name}</p>
                    <p className="text-sm text-gray-500">S·ªë l∆∞·ª£ng: {item.quantity}</p>
                </div>
                <p className="font-semibold text-red-500">{(item.price * item.quantity).toLocaleString()}ƒë</p>
                </div>
            ))}
            </CardContent>
        </Card>

        {/* ƒê·ªãa ch·ªâ ƒë·ªông */}
        <Card>
            <CardContent className="p-4 space-y-2 text-sm text-gray-700">
            <h2 className="text-lg font-semibold">üìç ƒê·ªãa ch·ªâ nh·∫≠n h√†ng</h2>
            <p><strong>T√™n:</strong> Nguy·ªÖn VƒÉn A</p>
            <p><strong>SƒêT:</strong> 0901234567</p>
            <p><strong>ƒê·ªãa ch·ªâ:</strong> 123 ƒê∆∞·ªùng ABC, Qu·∫≠n 1, TP. HCM</p>
            <Button variant="link" className="text-blue-600 px-0">Thay ƒë·ªïi ƒë·ªãa ch·ªâ</Button>
            </CardContent>
        </Card>

        {/* Voucher + coin + l·ªùi nh·∫Øn */}
        <Card>
            <CardContent className="p-4 space-y-3 text-sm">
            <h2 className="text-lg font-semibold">üéÅ ∆Øu ƒë√£i & L·ªùi nh·∫Øn</h2>

            <div className="flex justify-between items-center">
                <span>Ch·ªçn voucher:</span>
                <select className="border rounded px-2 py-1">
                <option value="">-- Kh√¥ng √°p d·ª•ng --</option>
                <option value="voucher1">Gi·∫£m 50k ƒë∆°n t·ª´ 300k</option>
                <option value="voucher2">Freeship to√†n qu·ªëc</option>
                </select>
            </div>

            <div className="flex items-center gap-2">
                <input type="checkbox" checked={useCoin} onChange={() => setUseCoin(!useCoin)} />
                <label>D√πng 20.000ƒë t·ª´ xu</label>
            </div>

            <textarea placeholder="L·ªùi nh·∫Øn cho Shop..." className="w-full border rounded p-2 text-sm" rows={3} />
            </CardContent>
        </Card>

        {/* V·∫≠n chuy·ªÉn & Thanh to√°n */}
        <Card>
            <CardContent className="p-4 space-y-4 text-sm">
            <h2 className="text-lg font-semibold">üöö V·∫≠n chuy·ªÉn & üí≥ Thanh to√°n</h2>

            <div>
                <p className="mb-1 font-medium">Ph∆∞∆°ng th·ª©c v·∫≠n chuy·ªÉn:</p>
                <select value={selectedShipping} onChange={(e) => setSelectedShipping(e.target.value)} className="border rounded p-2 w-full">
                <option value="ghn">GHN - Giao ti√™u chu·∫©n (30.000ƒë)</option>
                <option value="express">J&T - Giao nhanh (50.000ƒë)</option>
                </select>
            </div>

            <div>
                <p className="mb-1 font-medium">Ph∆∞∆°ng th·ª©c thanh to√°n:</p>
                <select value={selectedPayment} onChange={(e) => setSelectedPayment(e.target.value)} className="border rounded p-2 w-full">
                <option value="cod">Thanh to√°n khi nh·∫≠n h√†ng (COD)</option>
                <option value="bank">Chuy·ªÉn kho·∫£n ng√¢n h√†ng</option>
                <option value="momo">V√≠ MoMo</option>
                </select>
            </div>
            </CardContent>
        </Card>

        {/* T·ªïng k·∫øt & ƒë·∫∑t h√†ng */}
        <Card>
            <CardContent className="p-4 space-y-3 text-sm text-gray-700">
            <div className="flex justify-between">
                <span>T·∫°m t√≠nh</span>
                <span>{subtotal.toLocaleString()}ƒë</span>
            </div>
            <div className="flex justify-between">
                <span>Ph√≠ v·∫≠n chuy·ªÉn</span>
                <span>{shippingFee.toLocaleString()}ƒë</span>
            </div>
            <div className="flex justify-between">
                <span>Voucher gi·∫£m</span>
                <span className="text-green-600">-{discount.toLocaleString()}ƒë</span>
            </div>
            <div className="flex justify-between">
                <span>Xu gi·∫£m</span>
                <span className="text-green-600">-{coinDiscount.toLocaleString()}ƒë</span>
            </div>
            <hr />
            <div className="flex justify-between font-bold text-base">
                <span>T·ªïng c·ªông</span>
                <span className="text-red-500">{total.toLocaleString()}ƒë</span>
            </div>

            <Button className="w-full mt-4" onClick={() => setShowSuccess(true)}>
                ‚úÖ ƒê·∫∑t h√†ng
            </Button>

            </CardContent>
        </Card>

        <OrderSuccessModal show={showSuccess} onClose={() => setShowSuccess(false)} />

        </div>
    );
}

